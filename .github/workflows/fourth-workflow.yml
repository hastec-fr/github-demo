name: Fourth Workflow
on:
  push:
    branches:
      - master
      - 'releases/**'
      
  workflow_dispatch:
    inputs:
      display-bom:
        required: false
        type: 'boolean'
        default: false
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: npm-dep-${{ hashFiles('**/package-lock.json') }}
      - name: Get dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build the app
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    container:
      image: cypress/included:14.3.1
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: npm-dep-${{ hashFiles('**/package-lock.json') }}
      - run: npm run dev < /dev/null & npx wait-on "http://localhost:5173" --timeout 10s
      - name: Cypress run
        id: cypress-test
        uses: cypress-io/github-action@v6
      #   with:
      #     start: npm run dev
      #     wait-on: 'http://localhost:5173'
      - name: Get evidence
        uses: actions/upload-artifact@v4        
        if: steps.cypress-test.outcome == 'failure'
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore # 'warn' or 'error' are also available, defaults to `warn`

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      bom: ${{ steps.publish-bom.outputs.bom_list }}
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: npm-dep-${{ hashFiles('**/package-lock.json') }}
      - name: Get dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build the app
        run: npm run build
      - name: Detail content
        id: publish-bom
        run: |
          echo 'bom_list<<EOF' >> $GITHUB_OUTPUT
          find dist -name '*.js' -exec echo '{}' \; >> $GITHUB_OUTPUT
          echo EOF >> $GITHUB_OUTPUT
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: my-app
          path: dist

  deploy:
    needs: [build, lint]
    uses: ./.github/workflows/deploy.yml
    with:
      artifact-name: my-app
    # secrets:
    #   my-secret: ${{ secrets.GITHUB_TOKEN }}

  post-deploy:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Print deploy output
        run: echo "${{ needs.deploy.outputs.result }}"
